---
  - name: Check if the LSF installer directory exists
    ansible.builtin.stat:
      path: "{{ ansible_tool_kit_path }}"
    register: toolkit_path

  - name: Fail if the LSF installer directory does not exist
    ansible.builtin.fail:
      msg: "ERROR: Directory {{ ansible_tool_kit_path }} does not exist. Please ensure the IBM LSF installer toolkit is present."
    when: not toolkit_path.stat.exists

  - name: Replace 'pm' entries with empty array
    ansible.builtin.replace:
      path: "{{ ansible_tool_kit_group_vars }}"
      regexp: "^([ \\t]*)pm:\\s*\\[\\s*(lsf-pm-server|lsf-pm-client)\\s*\\]"
      replace: "\\1pm: [ ]"
    when: toolkit_path.stat.exists

  - name: Remove 'lsf-pm-server' and 'lsf-pm-client' from 'base' array
    ansible.builtin.replace:
      path: "{{ ansible_tool_kit_group_vars }}"
      regexp: "^([ \\t]*)base:\\s*\\[([^\\]]*)\\s*,\\s*lsf-pm-server\\s*,\\s*lsf-pm-client\\s*\\]"
      replace: "\\1base: [\\2]"
    when: toolkit_path.stat.exists

  - name: Insert stream directory setup after MYSQL_JDBC_DRIVER_JAR export
    ansible.builtin.blockinfile:
      path: "{{ ansible_tool_kit_role_path }}/deploy-gui/tasks/install_pac.yml"
      insertafter: 'export MYSQL_JDBC_DRIVER_JAR='
      marker: "    # {mark} Added stream setup after MYSQL_JDBC_DRIVER_JAR"
      block: |
        {% raw %}
            stream_dir={{ LSF_TOP }}/work/{{ LSF.my_cluster_name }}/logdir/stream
            stream_file=${stream_dir}/lsb.stream; 
            mkdir -p ${stream_dir}; 
            touch ${stream_file}; 
            chown -R lsfadmin ${stream_dir}; 
            chmod 644 ${stream_dir};
        {% endraw %}
    when: toolkit_path.stat.exists

  - name: Remove 'setup_sharedir_ppm.yml' task block
    ansible.builtin.replace:
      path: "{{ ansible_tool_kit_role_path }}/deploy-gui/tasks/post_deploy_primary.yml"
      regexp: |
        (?s)-\s*include_tasks:\s*setup_sharedir_ppm\.yml\s*\n\s*when:\s*\n\s*-\s*lsf_shared_dir\s*!=\s*"none"\s*\n\s*-\s*LSF_SUITE_EDITION\s*!=\s*'LSF Suite for Workgroup'\s*
      replace: ''
    when: toolkit_path.stat.exists

  - name: Remove 'configure_pm.yml' task block if it exists
    ansible.builtin.replace:
      path: "{{ ansible_tool_kit_role_path }}/deploy-gui/tasks/configure_master.yml"
      regexp: |
        (?s)-\s*include_tasks:\s*configure_pm\.yml\s*\n\s*when:\s*\n(\s*#.*\n)?\s*-\s*LSF_SUITE_EDITION\s*!=\s*'LSF Suite for Workgroup'
      replace: ''
    when: toolkit_path.stat.exists

  - name: Remove 'Call the Configure PM Common script' block
    ansible.builtin.replace:
      path: "{{ ansible_tool_kit_role_path }}/deploy-lsf-clients/tasks/main.yml"
      regexp: |
        (?s)-\s*name:\s*Call the Configure PM Common script\s*\n\s*include_tasks:\s*\.\./\.\./deploy-gui/tasks/configure_pm_common\.yml\s*\n\s*when:\s*\n\s*-\s*nfs_deployment\s*==\s*False\s*\n\s*-\s*LSF_SUITE_EDITION\s*!=\s*'LSF Suite for Workgroup'\s*\n\s*-\s*groups\.GUI_Hosts\s*\|\s*length\s*>\s*0\s*\n\s*-\s*inventory_hostname\s*not\s*in\s*groups\.GUI_Hosts\s*
      replace: ''
    when: toolkit_path.stat.exists