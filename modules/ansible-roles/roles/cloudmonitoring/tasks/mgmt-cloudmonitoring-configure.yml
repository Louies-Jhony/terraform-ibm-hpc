---
- name: Check if monitoring is enabled
  ansible.builtin.debug:
    msg: "Cloud Monitoring is enabled"
  when: "{{ monitoring_enable_for_management | bool }}"

- name: Configure Sysdig
  ansible.builtin.lineinfile:
    path: "{{ sysdig_config_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    create: yes
  loop:
    - { regexp: "==ACCESSKEY==", line: "customerid: {{ cloud_monitoring_access_key }}" }
    - { regexp: "==COLLECTOR==", line: "collector: {{ cloud_monitoring_ingestion_url }}" }
    - { regexp: "^tags:", line: "tags: type:management,lsf:true" }
  when: "{{ monitoring_enable_for_management | bool }}"

- name: Configure Prometheus
  ansible.builtin.copy:
    content: |
      global:
       scrape_interval: 60s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
       evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
       # scrape_timeout is set to the global default (10s).

      scrape_configs:
       - job_name: "lsf_prometheus_exporter"
         static_configs:
          - targets: ["localhost:9405"]

      remote_write:
       - url: "{{ cloud_monitoring_prws_url }}"
         authorization:
          credentials: "{{ cloud_monitoring_prws_key }}"
    dest: "{{ prometheus_config_file }}"
  when: "{{ monitoring_enable_for_management | bool }}"

- name: Enable and restart Prometheus
  ansible.builtin.systemd:
    name: prometheus
    enabled: yes
    state: restarted
  when: "{{ monitoring_enable_for_management | bool }}"

- name: Enable and restart Sysdig Agent
  ansible.builtin.systemd:
    name: dragent
    enabled: yes
    state: restarted
  when: "{{ monitoring_enable_for_management | bool }}"

- name: Ensure lsf_prometheus_exporter starts after shared filesystem mount
  ansible.builtin.lineinfile:
    path: "/etc/systemd/system/lsf_prometheus_exporter.service"
    regexp: "^After=network-online.target"
    line: "After=network-online.target mnt-lsf.mount"
  when: "{{ monitoring_enable_for_management | bool }}"

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes
  when: "{{ monitoring_enable_for_management | bool }}"

- name: Enable and restart LSF Prometheus Exporter
  ansible.builtin.systemd:
    name: lsf_prometheus_exporter
    enabled: yes
    state: restarted
  when: "{{ monitoring_enable_for_management | bool }}"