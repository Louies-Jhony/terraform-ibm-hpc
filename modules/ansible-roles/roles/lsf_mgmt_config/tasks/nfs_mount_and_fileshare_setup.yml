--- 
- name: Ensure NFS packages are installed
  package:
    name: nfs-utils
    state: present

- name: Ensure base LSF mount directory exists
  file:
    path: "{{ nfs_client_mount_path }}"
    state: directory
    mode: '0777'

- name: Mount NFS share with retries
  block:
    - name: Attempt to mount NFS share
      mount:
        src: "{{ nfs_server_with_mount_path }}"
        path: "{{ nfs_client_mount_path }}"
        fstype: nfs
        opts: rw,sec=sys,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev
        state: mounted
      register: mount_result
      until: mount_result is succeeded
      retries: 5
      delay: 2

    - name: Add NFS mount to fstab
      mount:
        path: "{{ nfs_client_mount_path }}"
        src: "{{ nfs_server_with_mount_path }}"
        fstype: nfs
        opts: rw,sec=sys,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev
        state: present

- name: Move and link LSF dirs to shared FS
  block:
    - name: Manage LSF shared directories
      block:
        - name: Clean up old shared dir content (primary only)
          file:
            path: "{{ nfs_client_mount_path }}/{{ item }}"
            state: absent
          when: on_primary | bool

        - name: Move local LSF dir to shared FS (primary only)
          command: mv {{ LSF_SUITE_TOP }}/{{ item }} {{ nfs_client_mount_path }}
          when: on_primary | bool

        - name: Remove local LSF dir (non-primary)
          file:
            path: "{{ LSF_SUITE_TOP }}/{{ item }}"
            state: absent
          when: not on_primary | bool

        - name: Symlink shared dir to LSF_SUITE_TOP
          file:
            src: "{{ nfs_client_mount_path }}/{{ item }}"
            dest: "{{ LSF_SUITE_TOP }}/{{ item }}"
            state: link
      loop:
        - conf
        - work
        - das_staging_area

    # - name: Set LSF ownership
    #   file:
    #     path: "{{ LSF_SUITE_TOP }}"
    #     recurse: yes
    #     owner: lsfadmin
    #     group: root

# - name: Configure LDAP certificate if enabled and primary
#   block:
#     - name: Create openldap directory
#       file:
#         path: /mnt/lsf/openldap
#         state: directory
#         mode: '0755'

#     - name: Write LDAP certificate to shared path
#       copy:
#         content: "{{ ldap_server_cert }}"
#         dest: /mnt/lsf/openldap/ldap_cacert.pem
#         mode: '0755'

#     - name: Copy LDAP cert to system path
#       copy:
#         src: /mnt/lsf/openldap/ldap_cacert.pem
#         dest: /etc/openldap/certs/ldap_cacert.pem
#         remote_src: yes
#   when: on_primary | bool and enable_ldap | bool and ldap_server_cert != 'null'

# - name: Configure PAC shared folders (primary + app center HA enabled)
#   block:
#     - name: Ensure PAC folder exists
#       file:
#         path: "{{ nfs_client_mount_pac_path }}"
#         state: directory

#     - name: Move gui-conf and create symlink
#       block:
#         - name: Remove existing gui-conf
#           file:
#             path: "{{ nfs_client_mount_pac_path }}/gui-conf"
#             state: absent

#         - name: Move and link gui-conf
#           command: mv {{ LSF_SUITE_GUI_CONF }} {{ nfs_client_mount_pac_path }}/gui-conf

#         - name: Create symlink to gui-conf
#           file:
#             src: "{{ nfs_client_mount_pac_path }}/gui-conf"
#             dest: "{{ LSF_SUITE_GUI_CONF }}"
#             state: link
#       when: on_primary | bool

#     - name: Move gui-work and create symlink
#       block:
#         - name: Remove existing gui-work
#           file:
#             path: "{{ nfs_client_mount_pac_path }}/gui-work"
#             state: absent

#         - name: Move and link gui-work
#           command: mv {{ LSF_SUITE_GUI_WORK }} {{ nfs_client_mount_pac_path }}/gui-work

#         - name: Create symlink to gui-work
#           file:
#             src: "{{ nfs_client_mount_pac_path }}/gui-work"
#             dest: "{{ LSF_SUITE_GUI_WORK }}"
#             state: link
#       when: on_primary | bool

# - name: Create data and VNC directories in shared FS (primary only)
#   block:
#     - name: Create and link LSF data dir
#       file:
#         path: "{{ nfs_client_mount_path }}/data"
#         state: directory
#         owner: lsfadmin
#         group: root

#     - name: Create symlink to work/data
#       file:
#         src: "{{ nfs_client_mount_path }}/data"
#         dest: "{{ LSF_SUITE_TOP }}/work/data"
#         state: link

#     - name: Create repository path dir
#       file:
#         path: "{{ nfs_client_mount_path }}/repository-path"
#         state: directory
#         mode: '0777'
#         owner: lsfadmin
#         group: root
#   when: on_primary | bool

# - name: Setup LSF logs in shared FS ----- discussion needed
#   block:
#     - name: Create shared log dir
#       file:
#         path: "{{ nfs_client_mount_path }}/log/{{ ansible_hostname }}"
#         state: directory
#         owner: lsfadmin
#         group: root

#     - name: Move existing logs if present
#       shell: |
#         if [ -d "{{ LSF_SUITE_TOP }}/log" ] && [ "$(ls -A {{ LSF_SUITE_TOP }}/log)" ]; then
#           mv {{ LSF_SUITE_TOP }}/log/* {{ nfs_client_mount_path }}/log/{{ ansible_hostname }}
#         fi
#       args:
#         executable: /bin/bash

#     - name: Replace log dir with symlink
#       file:
#         path: "{{ LSF_SUITE_TOP }}/log"
#         state: absent

#     - name: Create log symlink
#       file:
#         src: "{{ nfs_client_mount_path }}/log/{{ ansible_hostname }}"
#         dest: "{{ LSF_SUITE_TOP }}/log"
#         state: link

# - name: Setup PAC log directory
#   block:
#     - name: Ensure PAC log base exists
#       file:
#         path: "{{ nfs_client_mount_path }}/gui-logs/{{ ansible_hostname }}"
#         state: directory
#         owner: lsfadmin
#         group: root

#     - name: Move PAC logs if present
#       shell: |
#         if [ -d "{{ LSF_SUITE_GUI }}/logs/{{ ansible_hostname }}" ] && [ "$(ls -A {{ LSF_SUITE_GUI }}/logs/{{ ansible_hostname }})" ]; then
#           mv {{ LSF_SUITE_GUI }}/logs/{{ ansible_hostname }}/* {{ nfs_client_mount_path }}/gui-logs/{{ ansible_hostname }}
#         fi
#       args:
#         executable: /bin/bash

#     - name: Create symlink for PAC logs
#       file:
#         src: "{{ nfs_client_mount_path }}/gui-logs/{{ ansible_hostname }}"
#         dest: "{{ LSF_SUITE_GUI }}/logs/{{ ansible_hostname }}"
#         state: link

- name: Mount custom NFS shares
  block:
    - name: Mount each custom share
      mount:
        src: "{{ item.0 }}"
        path: "{{ item.1 }}"
        fstype: nfs
        opts: rw,sec=sys,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev
        state: mounted
      loop: "{{ custom_file_shares | zip(custom_mount_paths) | list }}"
